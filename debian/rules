#!/usr/bin/make -f
# debian/rules file for libfonts-java (uses cdbs)

export CLASSPATH=/usr/share/java/batik-bridge.jar:/usr/share/java/batik-constants.jar:/usr/share/java/batik-gvt.jar:/usr/share/java/batik-util.jar:/usr/share/java:commons-logging.jar:/usr/share/java/ehcache.jar:/usr/share/java/libbase.jar:/usr/share/java/libpixie.jar:/usr/share/java/xml-apis-ext.jar

%:
	dh $@ --with javahelper

override_dh_clean:
	dh_clean
	-rm -rf build
	-rm -rf javadoc
	-rm -f libloader-*.jar
	# don't use them, go sure
	-rm -f lib/* lib/optional/* test-lib/*
	-rm -rf tempJar

override_dh_auto_build:
	dh_auto_build
	# Manually copying the contents of some .properties files into the jar
	mkdir tempJar/ && cd tempJar && \
	        jar xf ../dist/libloader-*.jar && \
	        for F in $$(find ../source/ -name "*.properties"); do \
	                cp $$F $$(dirname $$F | sed 's|../source/||'); \
	        done && \
	        jar cf $$(basename ../dist/libloader-*.jar) * && \
	        cp libloader-*.jar ../dist/


override_dh_install:
	# Run javadoc target manually
	ant -Duser.name debian javadoc
	dh_install

override_dh_auto_test:
ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
	ant -Duser.name debian test
endif

override_dh_link:
	dh_link
	# Creating a libloader.jar symlink to the installed jar.
	nameJar=$$(find debian/libloader-java/usr/share/java/ -name "*.jar") && \
	        echo $$nameJar && \
	        ln -s $$(basename $$nameJar) debian/libloader-java/usr/share/java/libloader.jar
